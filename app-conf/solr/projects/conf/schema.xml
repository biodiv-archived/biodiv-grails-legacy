<?xml version="1.0" encoding="UTF-8" ?>

<schema name="projects" version="1.3">

	<types>
		<fieldType name="string" class="solr.StrField"
			sortMissingLast="true" omitNorms="true" />

		<!-- The optional sortMissingLast and sortMissingFirst attributes are currently 
			supported on types that are sorted internally as strings. This includes "string","boolean","sint","slong","sfloat","sdouble","pdate" 
			- If sortMissingLast="true", then a sort on this field will cause documents 
			without the field to come after documents with the field, regardless of the 
			requested sort order (asc or desc). - If sortMissingFirst="true", then a 
			sort on this field will cause documents without the field to come before 
			documents with the field, regardless of the requested sort order. - If sortMissingLast="false" 
			and sortMissingFirst="false" (the default), then default lucene sorting will 
			be used which places docs without the field first in an ascending sort and 
			last in a descending sort. -->

		<!-- The format for this date field is of the form 1995-12-31T23:59:59Z, 
			and is a more restricted form of the canonical representation of dateTime 
			http://www.w3.org/TR/xmlschema-2/#dateTime The trailing "Z" designates UTC 
			time and is mandatory. Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z 
			All other components are mandatory. Expressions can also be used to denote 
			calculations that should be performed relative to "NOW" to determine the 
			value, ie... NOW/HOUR ... Round to the start of the current hour NOW-1DAY 
			... Exactly 1 day prior to now NOW/DAY+6MONTHS+3DAYS ... 6 months and 3 days 
			in the future from the start of the current day Consult the DateField javadocs 
			for more information. Note: For faster range queries, consider the tdate 
			type -->
		<fieldType name="date" class="solr.TrieDateField" omitNorms="true"
			precisionStep="0" positionIncrementGap="0" />

		<!-- A Trie based date field for faster date range queries and date faceting. -->
		<fieldType name="tdate" class="solr.TrieDateField"
			omitNorms="true" precisionStep="6" positionIncrementGap="0" />

		<!-- Note: These should only be used for compatibility with existing indexes 
			(created with older Solr versions) or if "sortMissingFirst" or "sortMissingLast" 
			functionality is needed. Use Trie based fields instead. Numeric field types 
			that manipulate the value into a string value that isn't human-readable in 
			its internal form, but with a lexicographic ordering the same as the numeric 
			ordering, so that range queries work correctly. -->
		<fieldType name="sint" class="solr.TrieIntField"
			sortMissingLast="true" omitNorms="true" />
		<fieldType name="long" class="solr.TrieLongField"
			sortMissingLast="true" omitNorms="true" />

		<!-- solr.TextField allows the specification of custom text analyzers specified 
			as a tokenizer and a list of token filters. Different analyzers may be specified 
			for indexing and querying. The optional positionIncrementGap puts space between 
			multiple fields of this type on the same document, with the purpose of preventing 
			false phrase matching across fields. For more info on customizing your analyzer 
			chain, please see http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters -->

		<!-- A text field that uses WordDelimiterFilter to enable splitting and 
			matching of words on case-change, alpha numeric boundaries, and non-alphanumeric 
			chars, so that a query of "wifi" or "wi fi" could match a document containing 
			"Wi-Fi". Synonyms and stopwords are customized by external files, and stemming 
			is enabled. -->
		<fieldType name="text" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<charFilter class="solr.HTMLStripCharFilterFactory" />
				<tokenizer class="solr.StandardTokenizerFactory" />
				<!-- in this example, we will only use synonyms at query time <filter 
					class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" 
					expand="false"/> -->
				<!-- Case insensitive stop word removal. add enablePositionIncrements=true 
					in both the index and query analyzers to leave a 'gap' for more accurate 
					phrase queries. -->
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.WordDelimiterFilterFactory"
					generateWordParts="1" generateNumberParts="1" catenateWords="1"
					catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English"
					protected="protwords.txt" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"
					ignoreCase="true" expand="true" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.WordDelimiterFilterFactory"
					generateWordParts="1" generateNumberParts="1" catenateWords="0"
					catenateNumbers="0" catenateAll="0" splitOnCaseChange="1" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.SnowballPorterFilterFactory" language="English"
					protected="protwords.txt" />
			</analyzer>
		</fieldType>

		<!-- A general unstemmed text field - good if one does not know the language 
			of the field -->
		<fieldType name="textgen" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.WordDelimiterFilterFactory"
					generateWordParts="1" generateNumberParts="1" catenateWords="1"
					catenateNumbers="1" catenateAll="0" splitOnCaseChange="0" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt"
					ignoreCase="true" expand="true" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt" enablePositionIncrements="true" />
				<filter class="solr.WordDelimiterFilterFactory"
					generateWordParts="1" generateNumberParts="1" catenateWords="0"
					catenateNumbers="0" catenateAll="0" splitOnCaseChange="0" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>

		<!-- this is our main text type with all the taxon name filters -->
		<fieldType name="taxonText" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.WordDelimiterFilterFactory"
					generateWordParts="1" generateNumberParts="1" catenateWords="1"
					catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"
					splitOnNumerics="1" preserveOriginal="1" />
				<!-- split up bi-maculata, 2maculata, 1766c, etc. -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
				<filter class="solr.WordDelimiterFilterFactory"
					generateWordParts="1" generateNumberParts="1" catenateWords="0"
					catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"
					splitOnNumerics="1" preserveOriginal="1" />
				<!-- don't need the extra catenation on search - increase performance -->
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="textExact" class="solr.TextField">
			<analyzer type="index">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.TrimFilterFactory" />
			</analyzer>
		</fieldType>

		<!-- meant to be used for auto-complete searches -->
		<fieldType name="textSpell" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.RemoveDuplicatesTokenFilterFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true"
					words="stopwords.txt" enablePositionIncrements="true" />

			</analyzer>
		</fieldType>

		<!-- since fields of this type are by default not stored or indexed, any 
			data added to them will be ignored outright. -->
		<fieldtype name="ignored" stored="false" indexed="false"
			multiValued="true" class="solr.StrField" />


	</types>


	<fields>
		<!-- Valid attributes for fields: name: mandatory - the name for the field 
			type: mandatory - the name of a previously defined type from the <types> 
			section indexed: true if this field should be indexed (searchable or sortable) 
			stored: true if this field should be retrievable compressed: [false] if this 
			field should be stored using gzip compression (this will only apply if the 
			field type is compressable; among the standard field types, only TextField 
			and StrField are) multiValued: true if this field may contain multiple values 
			per document omitNorms: (expert) set to true to omit the norms associated 
			with this field (this disables length normalization and index-time boosting 
			for the field, and saves some memory). Only full-text fields or fields that 
			need an index-time boost need norms. termVectors: [false] set to true to 
			store the term vector for a given field. When using MoreLikeThis, fields 
			used for similarity should be stored for best performance. termPositions: 
			Store position information with the term vector. This will increase storage 
			costs. termOffsets: Store offset information with the term vector. This will 
			increase storage costs. default: a value that should be used if no value 
			is specified when adding a document. -->

		<!--document reference annotations -->

		<field name="id" type="string" indexed="true" stored="true"
			required="true" multiValued="false" />
		
		<field name="_version_" type="long" indexed="true" stored="true" multiValued="false"/>

		<field name="title" type="text" indexed="true" required="true"
			multiValued="false" />

		<field name="grantee_organization" type="text" indexed="true"
			required="false" />

		<field name="sitename" type="string" indexed="true" required="false"
			multiValued="true" />

		<field name="corridor" type="string" indexed="true" required="false"
			multiValued="true" />

		<field name="tag" type="string" indexed="true" required="false" multiValued="true" />
		
		
		<field name="group" type="long" indexed="true" stored="true"  multiValued="true"/>
		<field name="group_webaddress" type="string" indexed="true" stored="true" multiValued="true"/>


		<field name="text" type="text" indexed="true" stored="true"
			required="true" multiValued="true" termVectors="true" termPositions="true"
			termOffsets="true" />
		<copyField source="title" dest="text" />
		<copyField source="grantee_organization" dest="text" />
		<copyField source="sitename" dest="text" />
		<copyField source="corridor" dest="text" />
		<copyField source="tag" dest="text" />


		<field name="autocomplete" type="textSpell" indexed="true"
			stored="true" multiValued="true" />
		<copyField source="title" dest="autocomplete" />
				<copyField source="grantee_organization" dest="autocomplete" />
				<copyField source="sitename" dest="autocomplete" />
				<copyField source="corridor" dest="autocomplete" />
				<copyField source="tag" dest="autocomplete" />
		



		<dynamicField name="*" type="text" indexed="true"
			multiValued="true" />

		<!--dynamicField name="*" type="ignored" multiValued="true" / -->

	</fields>

	<uniqueKey>id</uniqueKey>

	<defaultSearchField>text</defaultSearchField>

	<solrQueryParser defaultOperator="OR" />
</schema>
